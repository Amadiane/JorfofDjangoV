# """
# Django settings for TamTechwebSite project.

# Generated by 'django-admin startproject' using Django 5.1.6.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """
# #Medias
# import os
# import dj_database_url
# from pathlib import Path
# from datetime import timedelta

# import cloudinary
# import cloudinary.uploader
# import cloudinary.api
# # from cloudinary.storage import MediaCloudinaryStorage
# from cloudinary_storage.storage import MediaCloudinaryStorage


# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-*$9x-&1x@s($^wyb%(sgmf&v4)nevsbowucc(ehx32__if0=ab'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# # ALLOWED_HOSTS = ['jorfofdjangov.onrender.com']
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'jorfofdjangov.onrender.com']





# # Application definition

# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#      'corsheaders',
#     'rest_framework',
#     'rest_framework_simplejwt',
#     'rest_framework_simplejwt.token_blacklist',
#     'base',
#     'cloudinary',
#     'cloudinary_storage',


# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'corsheaders.middleware.CorsMiddleware',  # Doit Ãªtre avant 'CommonMiddleware'
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]


# CORS_ALLOW_ALL_ORIGINS = True

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5173",  # l'URL de ton frontend
# ]

# CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "PATCH",  "OPTIONS"]



# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.AllowAny',
#     ),
# }



# SIMPLE_JWT = {
#     "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
#     "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
#     "ROTATE_REFRESH_TOKENS": False,
#     "BLACKLIST_AFTER_ROTATION": False,
#     "UPDATE_LAST_LOGIN": False,

#     'AUTH_COOKIE': 'access_token',  # Cookie name for the access token
#     'AUTH_COOKIE_REFRESH': 'refresh_token',  # Cookie name for the refresh token
#     'AUTH_COOKIE_SECURE': False,  # Set to True if using HTTPS
#     'AUTH_COOKIE_HTTP_ONLY': True,  # Make the cookie HTTP only
#     'AUTH_COOKIE_PATH': '/',  # Root path for the cookie
#     'AUTH_COOKIE_SAMESITE': 'Lax',  # Adjust according to your needs

# }



# CSRF_COOKIE_SECURE = False
# SESSION_COOKIE_SECURE = False

# # # ðŸ‘‡ DÃ©finit Cloudinary comme stockage par dÃ©faut
# # DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
# # STATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'


# import os
# from dotenv import load_dotenv

# load_dotenv()

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': os.getenv('dwuyq2eoz'),
#     'API_KEY': os.getenv('969526892885998'),
#     'API_SECRET': os.getenv('**********'),
# }

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'





# ROOT_URLCONF = 'TamTechwebSite.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [os.path.join(BASE_DIR, 'templates')],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'TamTechwebSite.wsgi.application'


# # if os.environ.get('DATABASE_URL'):
# #     # DÃ©ploiement sur Render
# #     DATABASES = {
# #         'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
# #     }
# # else:
# # # Configuration PostgreSQL pour Render
# #     DATABASES = {
# #         'default': {
# #             'ENGINE': 'django.db.backends.postgresql',
# #             'NAME': 'jorfofbasketserver',                       # Nom de la base
# #             'USER': 'postgres',                     # Utilisateur PostgreSQL
# #             'PASSWORD': 'root',    # Mot de passe gÃ©nÃ©rÃ© par Render
# #             'HOST': 'localhost',    # Host Render
# #             'PORT': '5432',                           # Port PostgreSQL
# #         }
# #     }


# import os
# import dj_database_url

# os.environ.pop('DATABASE_URL', None)  # ðŸ‘ˆ Ignore toute variable DATABASE_URL locale

# if os.environ.get('DATABASE_URL'):
#     # DÃ©ploiement sur Render
#     DATABASES = {
#         'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
#     }
# else:
#     # Configuration locale (dÃ©commenter pour activer)
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': 'jorfofdb',
#             'USER': 'root',
#             'PASSWORD': 'root',
#             'HOST': 'localhost',  # ou l'IP du serveur MySQL
#             'PORT': '3306',
#             'OPTIONS': {
#                 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
#             }
#         }
#     }


# # Database
# # https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.mysql',
# #         'NAME': 'tamkinewebsite',
# #         'USER': 'root',
# #         'PASSWORD': '',
# #         'HOST': 'localhost',  # ou l'IP du serveur MySQL
# #         'PORT': '3308',
# #         'OPTIONS': {
# #             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
# #         }
# #     }
# # }

# # Configuration PostgreSQL pour Render
# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.postgresql',
# #         'NAME': 'jorfofdb',                       # Nom de la base
# #         'USER': 'jorfofuser',                     # Utilisateur PostgreSQL
# #         'PASSWORD': 'xek9dMMKjbYbuFx8zUjgEy9VbdUV8gAW',    # Mot de passe gÃ©nÃ©rÃ© par Render
# #         'HOST': 'dpg-d3pvsu0gjchc73av0l8g-a',    # Host Render
# #         'PORT': '5432',                           # Port PostgreSQL
# #     }
# # }

# # Optionnel : si tu veux utiliser DATABASE_URL

# # import dj_database_url

# # DATABASES = {
# #      'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
# # }


# # Password validation
# # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'static/'

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'







# # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



# # Looking to send emails in production? Check out our Email API/SMTP product!
# EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
# EMAIL_HOST_USER = 'e0ff04df60d0cc'
# EMAIL_HOST_PASSWORD = '613e993f17c7b7'
# EMAIL_PORT = '2525'
# DEFAULT_FROM_EMAIL = 'amadoudianee2@gmail.com'





















































import os
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url

# -------------------------
# ðŸ”¹ Chargement du .env
# -------------------------
load_dotenv()

# -------------------------
# ðŸ”¹ RÃ©pertoires de base
# -------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -------------------------
# ðŸ”¹ SÃ©curitÃ© Django
# -------------------------
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-dev-key')

DEBUG = os.getenv('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'jorfofdjangov.onrender.com'
]

# -------------------------
# ðŸ”¹ Applications installÃ©es
# -------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',

    # apps locales
    'base',  # ðŸ‘‰ remplace par le nom exact de ton app (ex: "fondation" ou "phototheque")

    # cloudinary
    'cloudinary',
    'cloudinary_storage',
]

# -------------------------
# ðŸ”¹ Middleware
# -------------------------
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# -------------------------
# ðŸ”¹ URL & WSGI
# -------------------------
ROOT_URLCONF = 'TamTechwebSite.urls'
WSGI_APPLICATION = 'TamTechwebSite.wsgi.application'

# -------------------------
# ðŸ”¹ Base de donnÃ©es
# -------------------------
DATABASE_URL = os.environ.get("DATABASE_URL")

if DATABASE_URL:
    DATABASES = {
        'default': dj_database_url.config(default=DATABASE_URL, conn_max_age=600)
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'jorfofdb',
            'USER': 'root',
            'PASSWORD': 'root',
            'HOST': 'localhost',
            'PORT': '3306',
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
            }
        }
    }

# -------------------------
# ðŸ”¹ Cloudinary (Images)
# -------------------------
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv('dwuyq2eoz'),
    'API_KEY': os.getenv('969526892885998'),
    'API_SECRET': os.getenv('**********'),
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# -------------------------
# ðŸ”¹ Templates
# -------------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# -------------------------
# ðŸ”¹ Fichiers statiques et mÃ©dias
# -------------------------
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# -------------------------
# ðŸ”¹ Internationalisation
# -------------------------
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Africa/Casablanca'
USE_I18N = True
USE_TZ = True

# -------------------------
# ðŸ”¹ ParamÃ¨tres finaux
# -------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



CORS_ALLOWED_ORIGINS = [
    "https://jorfof-django-v.vercel.app",
]

CSRF_TRUSTED_ORIGINS = [
    "https://jorfof-django-v.vercel.app",
]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_ALL_ORIGINS = True  # temporairement pour test


